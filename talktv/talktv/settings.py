"""
Django settings for talktv project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

from decouple import config, Csv

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'log_storage.apps.LogStorageConfig',
    'log_report.apps.LogReportConfig',
    'log_event.apps.LogEventConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'talktv.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'talktv.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': config('DB_120_HOST'),
        'PORT': config('DB_120_PORT'),
        'NAME': config('DB_120_NAME'),
        'USER': config('DB_120_USER'),
        'PASSWORD': config('DB_120_PASSWORD'),
    },
    'db_anchor': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': config('DB_39_HOST'),
        'PORT': config('DB_39_PORT'),
        'NAME': config('DB_39_ANCHOR'),
        'USER': config('DB_39_USER'),
        'PASSWORD': config('DB_39_PASSWORD'),
        'OPTIONS': {
            'sql_mode': 'strict_all_tables',
        }
    },
    'db_qt_entertainment': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': config('DB_39_HOST'),
        'PORT': config('DB_39_PORT'),
        'NAME': config('DB_39_QT_ENTERTAINMENT'),
        'USER': config('DB_39_USER'),
        'PASSWORD': config('DB_39_PASSWORD'),
        'OPTIONS': {
            'sql_mode': 'strict_all_tables',
        }
    },
    'db_report_116': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': config('DB_116_HOST'),
        'PORT': config('DB_116_PORT'),
        'NAME': config('DB_116_NAME'),
        'USER': config('DB_116_USER'),
        'PASSWORD': config('DB_116_PASSWORD'),
    },
    'db_talktv': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': config('DB_68_HOST'),
        'PORT': config('DB_68_PORT'),
        'NAME': config('DB_68_NAME'),
        'USER': config('DB_68_USER'),
        'PASSWORD': config('DB_68_PASSWORD'),
        'OPTIONS': {
            'sql_mode': 'strict_all_tables',
        }
    },
    'ztalk': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': config('DB_ZTALK_HOST'),
        'PORT': config('DB_ZTALK_PORT'),
        'NAME': config('DB_ZTALK_NAME'),
        'USER': config('DB_ZTALK_USER'),
        'PASSWORD': config('DB_ZTALK_PASSWORD'),
        'OPTIONS': {
            'sql_mode': 'strict_all_tables',
        }
    },
    'ztalk_log': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': config('DB_ZTALK_LOG_HOST'),
        'PORT': config('DB_ZTALK_LOG_PORT'),
        'NAME': config('DB_ZTALK_LOG_NAME'),
        'USER': config('DB_ZTALK_LOG_USER'),
        'PASSWORD': config('DB_ZTALK_LOG_PASSWORD'),
        'OPTIONS': {
            'sql_mode': 'strict_all_tables',
        }
    },
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Ho_Chi_Minh'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/assets/'
STATIC_ROOT = config('STATIC_ROOT', 'static')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Database Router

DATABASE_ROUTERS = ['talktv.custom.database_router.DatabaseRouter']

# Test Runner

TEST_RUNNER = 'talktv.custom.test_runner.NoDBTestRunner'

# Mongo DB

MONGO_DB_HOST = config('MONGO_DB_HOST')
MONGO_DB_PORT = config('MONGO_DB_PORT', cast=int)
MONGO_DB_NAME = config('MONGO_DB_NAME')

# Logging
if not DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': True,
        'handlers': {
            'file': {
                'level': 'ERROR',
                'class': 'logging.FileHandler',
                'filename': os.path.join(BASE_DIR, 'error.log'),
            },
            'command_file': {
                'level': 'ERROR',
                'class': 'logging.FileHandler',
                'filename': os.path.join(BASE_DIR, 'command_error.log'),
            },

        },
        'loggers': {
            'django': {
                'handlers': ['file'],
                'level': 'ERROR',
                'propagate': True,
            },
            'command_django': {
                'handlers': ['command_file'],
                'level': 'ERROR',
                'propagate': True,
            },
        },
    }

# Cache
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cached_data'),
        'OPTIONS': {
            'MAX_ENTRIES': 5000
        }
    }
}

# CORS

CORS_ALLOW_CREDENTIALS = True

CORS_ORIGIN_REGEX_WHITELIST = (
    r'^(https?://)?(\w+\.)?talktv\.vn$',
    r'^(https?://)?(\w+\.)?localhost(:\d+)?$',
    r'^(https?://)?(\w+\.)?127\.0\.0\.1(:\d+)?$',
)

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    )
}

# Output directory
OUTPUT_DIR = os.path.join(BASE_DIR, 'outputs')
